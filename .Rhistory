# Write comments
1+1
# Write comments
1+1
2+2
# Write comments
1+1
2+2
# Write comments
1+1
2+2
# Write comments
1+1
# Write comments
1+1
2+2
log(2)
mean(2,3,4)
sum(5,1,3,5)
?sum()
?sqrt()
x <- 5
1+x
1 <- 3
1x
1x <- 2
x1 <- 2
x1
# vectors
# 'a sequence of values of the same data type'
?c()
x <- c(1,2,3,4,5)
x
x <- seq(1:5)
x
y <- c('Liz', 'Gordon', 'Ina')
y
y <- c('Liz','Gordon','Ina')
y
library(tidyverse)
data(mtcars)
data()
data(mtcars)
force(mtcars)
data(mtcars)
force(mtcars)
mtcars
mtcars <- tibble(mtcars)
mtcars
ggplot(mtcars,
aes(x=mpg,
y=hp))
ggplot(mtcars,
aes(x=mpg,
y=hp))+
geom_point(aes(colour=as.factor(cyl)))+
geom_smooth(method=lm, se=TRUE)
pal.cyl <- c(
'4'="#F0B354",
'6'="#B4E378",
'8'="#78CEE3"
)
ggplot(mtcars,
aes(x=mpg,
y=hp))+
geom_point(aes(colour=as.factor(cyl)),
size=4)+
geom_smooth(method=lm,
se=TRUE,
colour="white",
alpha=0.3)+
#scale_x_continuous(limits=c(0,35))+
scale_colour_manual(values=pal.cyl)+
theme_bw()
mtcars2 <- mtcars %>%
mutate(model=rownames(.))
rownames(mtcars2) <- NULL
mtcars2 <- mtcars %>%
mutate(model=rownames(.))
rownames(mtcars2) <- NULL
ggplot(mtcars2,
aes(y=reorder(model, disp),
x=disp))+
geom_bar(stat="identity",
aes(fill=as.factor(cyl)))
ggplot(mtcars2,
aes(y=reorder(model, disp),
x=disp))+
geom_bar(stat="identity",
aes(fill=as.factor(cyl)),
size=0.5,
colour="black")+
scale_fill_manual(values=pal.cyl)+
scale_x_continuous(expand=c(0,3))+
scale_y_discrete(expand=c(0,0.65))+
theme(panel.grid=element_line(colour="grey95"),
axis.ticks.y = element_blank(),
axis.text = element_text(size=10),
panel.border = element_rect(colour="black",
fill=NA,
size=1))+
guides(fill=guide_legend(title="cyl"))+
ylab("model")
lm(mpg ~ hp, mtcars)
t.test(mpg ~ hp, mtcars)
aov(mpg ~ hp, mtcars)
model <- lm(mpg ~ hp, mtcars)
plot(model)
hist(mpg, mtcars)
hist(mtcars$mpg)
hist(mtcars$hp)
hist(log(mtcars$hp))
model <- lm(mpg ~ log(hp), mtcars)
plot(model)
hist(log(mtcars$mpg))
ggplot(mtcars,
aes(x=mpg,
y=hp))+
geom_point(aes(colour=as.factor(cyl)),
size=4)+
geom_smooth(method=lm,
se=TRUE,
colour="white",
alpha=0.3)+
#scale_x_continuous(limits=c(0,35))+
scale_colour_manual(values=pal.cyl)+
theme_bw()
blob <- read_table("~/Bioinformatics/scTranscriptomes/blobs/taxonomy.protoBlob1.blobDB.bestsum.table2.txt")
View(blob)
View(blob)
names(blob)
ggplot(blob, aes(GC, log10(cov0)))+
geom_point(aes(size=length,
colour=`phylum.t.9%s`))
ggplot(blob, aes(GC, log10(cov0)))+
geom_point(aes(size=length,
colour=`phylum.t.9%s`))
blob <- read_table("~/Bioinformatics/scTranscriptomes/blobs/taxonomy.protoBlob1.blobDB.bestsum.table2.txt")
library(tidyverse)
blob <- read_table("~/Bioinformatics/scTranscriptomes/blobs/taxonomy.protoBlob1.blobDB.bestsum.table2.txt")
names(blob)
ggplot(blob, aes(GC, log10(cov0)))+
geom_point(aes(size=length,
colour=`phylum.t.9%s`))
blob.f <- blob %>% filter(`phylum.t.9%s` != "no-hit")
ggplot(blob.f, aes(GC, log10(cov0)))+
geom_point(aes(size=length,
fill=`phylum.t.9%s`),
color="black",
pch=21)+
scale_x_continuous(limits=c(0,1))+
#scale_size(range = c(0, 4))+
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color="grey80",
size=0.1),
panel.background = element_rect(color="black"),
strip.background = element_rect(color="black"))
table(blob$`phylum.t.9%s`)
ggplot()+
geom_point(data = blob.f %>% filter(`phylum.t.9%s` != "Eukaryota-undef"),
aes(GC, log10(cov0),
size=length,
fill=`phylum.t.9%s`),
color="black",
pch=21)+
geom_point(data = blob.f %>% filter(`phylum.t.9%s` == "Eukaryota-undef"),
aes(GC, log10(cov0),
size=length,
fill=`phylum.t.9%s`),
color="black",
pch=21)+
scale_x_continuous(limits=c(0,1))+
#scale_size(range = c(0, 4))+
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color="grey80",
size=0.1),
panel.background = element_rect(color="black"),
strip.background = element_rect(color="black"))
# Define color palette for BUSCO status
pal.BUSCO <- c(Complete = "#36AE7C",
Duplicated = "#187498",
Fragmented = "#F9D923",
Missing = "#EB5353")
# Read in tree file. Use read.iqtree for .contree files.
tree <- read.tree(text='((A, B)100, ((C, D)89, (E, F)90)70)100;')
?read.tree()
library(ape)
# Read in tree file. Use read.iqtree for .contree files.
tree <- read.tree(text='((A, B)100, ((C, D)89, (E, F)90)70)100;')
# Create ggtree object of the tree and add tip labels and node labels
ggtree(tree)+
geom_tiplab()+
geom_nodelab()
library(ggtree)
# Create ggtree object of the tree and add tip labels and node labels
ggtree(tree)+
geom_tiplab()+
geom_nodelab()
# Read in metadata for BUSCO analysis
meta.busco.df<- read_csv("~/Bioinformatics/RWorkshop/meta.busco.df.csv")
# Load required libraries
library(tidyverse)
# Read in metadata for BUSCO analysis
meta.busco.df<- read_csv("~/Bioinformatics/RWorkshop/meta.busco.df.csv")
# Define metadata for genes for each tip of the tree
meta.df <- data.frame(Tip=c("A", "B", "C", "D", "E", "F"),
gene1 = c("Y","Y","Y","Y","N","N"),
gene2 = c("Y","N","N","Y","Y","N"),
gene3 = c("N","N","Y","Y","Y","N"))
meta.df.m <- meta.df %>% gather(Tip)
# Create ggtree object of the tree with a roundrect layout and add tip labels and node labels
p1 <- ggtree(tree,
layout="roundrect")+
geom_tiplab(size=6,
fontface="bold")+
geom_nodelab(aes(subset = !is.na(as.numeric(label)) & as.numeric(label) != 100),
nudge_x = 0.1)+
geom_nodepoint(
aes(subset = !is.na(as.numeric(label)) & as.numeric(label) == 100),
colour = "black",
size = 4
)
p1
#Add a fruit plot to the ggtree object to show the percentage of BUSCO genes found for each tip
p2 <- p1+
geom_fruit(
data = meta.busco.df,
geom = geom_bar,
mapping = aes(x = p,
y = Tip,
fill = Status),
colour="black",
stat="identity",
orientation="y",
pwidth = 0.5,
offset = 0.1,
width=0.5,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "% BUSCOs",
title.size=5,
text.size = 0,
line.size = 0)
) +
scale_fill_manual(values = pal.BUSCO)
library(ggtreeExtra)
#Add a fruit plot to the ggtree object to show the percentage of BUSCO genes found for each tip
p2 <- p1+
geom_fruit(
data = meta.busco.df,
geom = geom_bar,
mapping = aes(x = p,
y = Tip,
fill = Status),
colour="black",
stat="identity",
orientation="y",
pwidth = 0.5,
offset = 0.1,
width=0.5,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "% BUSCOs",
title.size=5,
text.size = 0,
line.size = 0)
) +
scale_fill_manual(values = pal.BUSCO)
p2
# Add a new fill scale to the ggtree object to show the presence or absence of each gene for each tip
p3 <- p2 +
new_scale_fill() +
geom_fruit(
data = meta.df.m,
geom = geom_tile,
mapping = aes(x = variable,
y = Tip,
fill = value),
show.legend = FALSE,
colour="black",
size=0.5,
height=0.5,
width=0.5,
pwidth = 0.5,
offset = 0.05,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "Genes",
title.size=5,
text.size = 4,
line.size = 0,
vjust = -3
)
) +
scale_fill_manual(values = c(Y="khaki", N="white"))
library(ggnewscale)
# Add a new fill scale to the ggtree object to show the presence or absence of each gene for each tip
p3 <- p2 +
new_scale_fill() +
geom_fruit(
data = meta.df.m,
geom = geom_tile,
mapping = aes(x = variable,
y = Tip,
fill = value),
show.legend = FALSE,
colour="black",
size=0.5,
height=0.5,
width=0.5,
pwidth = 0.5,
offset = 0.05,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "Genes",
title.size=5,
text.size = 4,
line.size = 0,
vjust = -3
)
) +
scale_fill_manual(values = c(Y="khaki", N="white"))
View(meta.df.m)
library(reshape2)
# Reshape metadata for gene values into long format
meta.df.m1 <- melt(meta.df, id.vars = "Tip")
View(meta.df.m1)
View(meta.df.m)
meta.df.m <- meta.df %>%
pivot_longer(cols = -Tip, names_to = "variable", values_to = "value")
View(meta.df.m)
View(meta.df.m1)
meta.df.m <- meta.df %>%
pivot_longer(cols = -Tip, names_to = "variable", values_to = "value")
#Add a fruit plot to the ggtree object to show the percentage of BUSCO genes found for each tip
p2 <- p1+
geom_fruit(
data = meta.busco.df,
geom = geom_bar,
mapping = aes(x = p,
y = Tip,
fill = Status),
colour="black",
stat="identity",
orientation="y",
pwidth = 0.5,
offset = 0.1,
width=0.5,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "% BUSCOs",
title.size=5,
text.size = 0,
line.size = 0)
) +
scale_fill_manual(values = pal.BUSCO)
p2
# Load required libraries
library(tidyverse)
library(ape)
library(ggtree)
library(ggtreeExtra)
library(ggnewscale)
# Define color palette for BUSCO status
pal.BUSCO <- c(Complete = "#36AE7C",
Duplicated = "#187498",
Fragmented = "#F9D923",
Missing = "#EB5353")
# Read in tree file. Use read.iqtree for .contree files.
tree <- read.tree(text='((A, B)100, ((C, D)89, (E, F)90)70)100;')
# Create ggtree object of the tree and add tip labels and node labels
ggtree(tree)+
geom_tiplab()+
geom_nodelab()
# Read in metadata for BUSCO analysis
meta.busco.df<- read_csv("~/Bioinformatics/RWorkshop/meta.busco.df.csv")
# Define metadata for genes for each tip of the tree
meta.df <- data.frame(Tip=c("A", "B", "C", "D", "E", "F"),
gene1 = c("Y","Y","Y","Y","N","N"),
gene2 = c("Y","N","N","Y","Y","N"),
gene3 = c("N","N","Y","Y","Y","N"))
# Reshape metadata for gene values into long format
meta.df.m1 <- melt(meta.df, id.vars = "Tip")
meta.df.m <- meta.df %>%
pivot_longer(cols = -Tip, names_to = "variable", values_to = "value")
# Create ggtree object of the tree with a roundrect layout and add tip labels and node labels
p1 <- ggtree(tree,
layout="roundrect")+
geom_tiplab(size=6,
fontface="bold")+
geom_nodelab(aes(subset = !is.na(as.numeric(label)) & as.numeric(label) != 100),
nudge_x = 0.1)+
geom_nodepoint(
aes(subset = !is.na(as.numeric(label)) & as.numeric(label) == 100),
colour = "black",
size = 4
)
p1
#Add a fruit plot to the ggtree object to show the percentage of BUSCO genes found for each tip
p2 <- p1+
geom_fruit(
data = meta.busco.df,
geom = geom_bar,
mapping = aes(x = p,
y = Tip,
fill = Status),
colour="black",
stat="identity",
orientation="y",
pwidth = 0.5,
offset = 0.1,
width=0.5,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "% BUSCOs",
title.size=5,
text.size = 0,
line.size = 0)
) +
scale_fill_manual(values = pal.BUSCO)
p2
# Add a new fill scale to the ggtree object to show the presence or absence of each gene for each tip
p3 <- p2 +
new_scale_fill() +
geom_fruit(
data = meta.df.m,
geom = geom_tile,
mapping = aes(x = variable,
y = Tip,
fill = value),
show.legend = FALSE,
colour="black",
size=0.5,
height=0.5,
width=0.5,
pwidth = 0.5,
offset = 0.05,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "Genes",
title.size=5,
text.size = 4,
line.size = 0,
vjust = -3
)
) +
scale_fill_manual(values = c(Y="khaki", N="white"))
p3
p3 <- p2 +
new_scale_fill() +
geom_fruit(
data = meta.df.m,
geom = geom_point,
mapping = aes(x = variable,
y = Tip,
fill = value),
pch=21,
stroke=0.75,
show.legend = FALSE,
colour="black",
size=15,
pwidth = 0.5,
offset = 0.05,
inherit.aes = FALSE,
axis.params=list(
axis="x",
title = "Genes",
title.size=5,
text.size = 4,
line.size = 0,
vjust = -3
)
) +
scale_fill_manual(values = c(Y="khaki", N="white"))
p3
nodemap <- ggtree(tree)+
geom_tiplab()+
geom_label2(
aes(subset = !isTip, label = node),
size = 6,
color = "darkred"
)
nodemap
p4 <- p3 +
geom_hilight(node = 10,
fill = "#C3C5C5",
extendto = 7.2,
roundrect=TRUE,
roundrect.r=0.1)
p4
p5 <- p4 + geom_cladelabel(
10,
"Interesting taxa",
offset = 4.3,
barsize = 1,
angle = -90,
offset.text = 0.20,
hjust = 0.5,
fontsize = 4)
p5
p6<- move_layers(p5, 'GeomHilightRect', position = "bottom")
library(gginnards)
p6<- move_layers(p5, 'GeomHilightRect', position = "bottom")
p6
version(ape)
